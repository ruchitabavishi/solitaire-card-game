{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"root\"\n};\nconst _hoisted_2 = {\n  class: \"top-area\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left-area\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card closed-card\"\n})], -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"right-area\"\n};\nconst _hoisted_5 = {\n  class: \"card-details\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"bottom-container\"\n}, null, -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.pileCards, card => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: card.suitSymbol,\n      class: \"card bg-white\"\n    }, [_createElementVNode(\"div\", _hoisted_5, _toDisplayString(card.suitSymbol), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _hoisted_6]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","pileCards","card","key","suitSymbol","_hoisted_5","_toDisplayString","_hoisted_6"],"sources":["/Users/ruchita/ruchita-projects/simple-card-game/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"root\">\n    <div class=\"top-area\">\n        <div class=\"left-area\">\n            <div class=\"card closed-card\"></div>\n        </div>\n        <div class=\"right-area\">\n          <div v-for=\"card in pileCards\" :key=card.suitSymbol class=\"card bg-white\">\n              <div class=\"card-details\">{{card.suitSymbol}}</div>\n          </div>\n        </div>\n\n    </div>\n\n    <div class=\"bottom-container\">\n    </div>\n\n  </div>  \n</template>\n\n<script>\n  const cardRanking = ['A', '2', '3', '4', '5',\n              '6', '7', '8', '9', '10', 'J', 'Q', 'K'];\n  const cardSuits = ['spade', 'heart', 'diamond', 'club'];\n\n  // 24 cards in deck\n  // 28 card distributed\n  export default {\n      data() {\n        return {\n          globalDeck: [],\n          shuffledDeck: [],\n          pileCards: [\n            {\n              suitSymbol:'‚ô†',\n              cardColor :'black'\n            },\n            {\n              suitSymbol:'‚ô•',\n              cardColor :'red'\n            },\n            {\n              suitSymbol:'‚ô¶',\n              cardColor :'red'\n            },\n            {\n              suitSymbol:'‚ô£',\n              cardColor :'black'\n            },\n          ],\n          remainingDeck: [],\n          pileDeck: []\n\n        }\n      },\n      methods: {\n        createCard(rank, suit, higher) {\n          \n          let suitSymbol, cardColor;\n          switch (suit) {\n              case 'spade':\n                  suitSymbol = '‚ô†';\n                  cardColor = 'black';\n                  break;\n              case 'heart':\n                  suitSymbol = '‚ô•';\n                  cardColor = 'red';\n                  break;\n              case 'diamond':\n                  suitSymbol = '‚ô¶';\n                  cardColor = 'red';\n                  break;\n              case 'club':\n                  suitSymbol = '‚ô£';\n                  cardColor = 'black';\n                  break;\n              default:\n                  suitSymbol = 'üÉè';\n                  cardColor = 'black';\n                  break;\n          }\n\n          return {\n            suitSymbol: suitSymbol,\n              rank,\n              higher,\n              suit,\n              color: cardColor,\n              below: null\n          }\n        },\n        createDeck() {\n          const deck = [];\n          for (let i = 0; i < cardSuits.length; i++) {\n            for (let j = 0; j < cardRanking.length; j++) {  \n\n              const higherRank = cardRanking[j + 1] ? cardRanking[j + 1] : null;\n              const newCard = this.createCard(cardRanking[j], cardSuits[i], higherRank);\n              deck.push(newCard);\n            }\n          }\n          console.log(deck,\"this is complete deck\")\n          return deck;\n\n        },\n        putCardsInDeck(deck) {\n\n        },\n        distributeCards(deck) {\n\n        },\n        shuffleCards(deck) {\n         return deck.sort(() => Math.random() - 0.5);\n       },\n      },\n      mounted() {\n        this.globalDeck = this.createDeck();\n        this.shuffledDeck = this.shuffleCards(this.globalDeck)\n        this.putCardsInDeck()\n        this.distributeCards()\n      }\n  }\n\n</script>\n\n<style scoped>\n.root {\n  position: relative;\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.top-area {\n  justify-content: space-around;\n  align-items: center;\n  height: 30%;\n  background: darkgreen;\n  display: flex;\n}\n\n.right-area {\n  width: 45%;\n  display: flex;\n  justify-content: space-around;\n}\n\n.closed-card {\n  background: skyblue;\n}\n\n.bg-white {\n  background: white;\n}\n\n\n.card {\n  display: flex;\n  border-radius: 8px;\n  width: 100px;\n  height: 150px;\n  border: black soli 1px;\n  box-shadow: 0cm;\n}\n\n.card-details {\n  margin:auto;\n  align-content: center;\n  font-size: 60px;\n}\n.bottom-container {\n  height: 100%;\n  width: 100%;\n  background: lightgreen;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAU;gEACjBC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAW,I,aAClBC,mBAAA,CAAoC;EAA/BD,KAAK,EAAC;AAAkB,G;;EAE5BA,KAAK,EAAC;AAAY;;EAEZA,KAAK,EAAC;AAAc;gEAMnCC,mBAAA,CACM;EADDD,KAAK,EAAC;AAAkB;;uBAb/BE,mBAAA,CAgBM,OAhBNC,UAgBM,GAfJF,mBAAA,CAUM,OAVNG,UAUM,GATFC,UAEM,EACNJ,mBAAA,CAIM,OAJNK,UAIM,I,kBAHJJ,mBAAA,CAEMK,SAAA,QAThBC,WAAA,CAO8BC,KAAA,CAAAC,SAAS,EAAjBC,IAAI;yBAAhBT,mBAAA,CAEM;MAF0BU,GAAG,EAACD,IAAI,CAACE,UAAU;MAACb,KAAK,EAAC;QACtDC,mBAAA,CAAmD,OAAnDa,UAAmD,EAAAC,gBAAA,CAAvBJ,IAAI,CAACE,UAAU,iB;sCAMrDG,UACM,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}